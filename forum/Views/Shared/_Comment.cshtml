@model Comment
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    bool signedIn = false;
}

@if (SignInManager.IsSignedIn(User) && UserManager.GetUserAsync(User).Result != null)
{
    signedIn = true;
}

<div id="commentId-@Model.CommentId">
    <span asp-validation-for="@Model.Content"></span>
    @*
    <h3>@Model.CommentId</h3>
    *@

    <h3>
        @if (Model.User != null)
        {
            @Model.User.UserName
        }
        else
        {
            <span class="deleted-user" title="Deleted user">Anonymous</span>
        }
    </h3>
    <div>@Model.DateCreated</div>
    <div>@Model.DateLastEdited</div>
    <div>Total likes @Model.TotalLikes</div>
    <div>
        <div>@Model.Content</div>

        @* If the user is the owner of the comment show buttons for editing, deleting, signedIn is checked to prevent the buttons to be shown if User.Id is null *@
        @if (@Model.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier) && signedIn)
        {
            <details>
                <summary>Edit</summary>
                <div>
                    <partial name="_UpdateComment" model="Model"/>
                </div>
            </details>
            <a asp-controller="Post"
               asp-action="DeleteComment"
               asp-route-id="@Model.CommentId">
                Delete
            </a>
        }
        else
        {
            <a asp-controller="Post"
               asp-action="LikeComment"
               asp-route-id="@Model.CommentId">
                Like
            </a>
        }
    </div>


    @if (signedIn)
    {
        <div>
            <details>
                <summary>Reply</summary>
                <div>
                    <partial name="_CreateComment" model="new Comment { ParentCommentId = Model.CommentId, PostId = Model.PostId }"/>
                </div>
            </details>
        </div>
    }
    <div style="padding-left: 50px">
        @if (Model.CommentReplies != null)
        {
            foreach (var comment in Model.CommentReplies)
            {
                <partial name="_Comment" model="comment"/>
            }
        }
    </div>
</div>